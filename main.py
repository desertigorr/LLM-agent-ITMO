import requests
import xml.etree.ElementTree as ET
import os
from fastapi import FastAPI, HTTPException
from pydantic import BaseModel


LLM_API_KEY = os.getenv("DEEPSEEK_API_KEY")
API_KEY = os.getenv("API_KEY")
FOLDER_ID = os.getenv("FOLDER_ID")


# ‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º FastAPI
app = FastAPI()

# üîé –ú–æ–¥–µ–ª—å –∑–∞–ø—Ä–æ—Å–∞
class SearchRequest(BaseModel):
    query: str

# —Ç–∏–ø–∞ RAG
def search_yandex(query):
    # –∑–∞–ø—Ä–æ—Å
    query = "–ö–æ–≥–¥–∞ –ò–¢–ú–û –ø–æ–ª—É—á–∏–ª —Å—Ç–∞—Ç—É—Å –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞?"

    # URL –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∫ Yandex Search API
    url = f"https://yandex.ru/search/xml?folderid={FOLDER_ID}&apikey={API_KEY}&query={query}"

    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞
    params = {
        "text": query,
        "lang": "ru",
        "type": "web",
        "limit": 1,
    }

    # –¥–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É headero–≤ –Ω–∞ –≤—Å—è–∫–∏–π
    headers = {
        'Content-Type': 'application/x-www-form-urlencoded',
        'User-Agent': 'Mozilla/5.0'
    }

    try:
        # –û—Ç–ø—Ä–∞–≤–∫–∞ GET-–∑–∞–ø—Ä–æ—Å–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –≤ URL
        response = requests.get(url, params=params, timeout=1)
        response.raise_for_status()

        # –í—ã–≤–æ–¥–∏–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–π XML
        print("–ü–æ–ª—É—á–µ–Ω–Ω—ã–π XML –æ—Ç–≤–µ—Ç:")
        print(response.text)
        print("-" * 50)

        # –ü–∞—Ä—Å–∏–Ω–≥ XML –æ—Ç–≤–µ—Ç–∞
        root = ET.fromstring(response.text)
        
        
        # –ü–æ–∏—Å–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ XML
        results = root.findall('.//doc')
        
        # –í—ã–≤–æ–¥–∏–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ —Ç—Ä–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        if results:
            for i, doc in enumerate(results[:3]):
                title = doc.find('title').text if doc.find('title') is not None else '–ù–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞'
                url = doc.find('url').text if doc.find('url') is not None else '–ù–µ—Ç URL'
                
                # –ò—â–µ–º —Ç–µ–≥ extended-text –≤ properties
                extended_text = doc.find('.//extended-text')
                extended = extended_text.text if extended_text is not None and extended_text.text else '–ù–µ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è'
                
                print(f"\n–†–µ–∑—É–ª—å—Ç–∞—Ç {i+1}:")
                print(f"Title: {title}")
                print(f"URL: {url}")
                print(f"Extended text: {extended}")
                print("-" * 50)

    except requests.exceptions.RequestException as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞: {e}")
    except ET.ParseError as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ XML: {e}")
    except Exception as e:
        print(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")



@app.post("/search")
def search_api(request: SearchRequest):
    results = search_yandex(request.query)
    return {"query": request.query, "results": results}

